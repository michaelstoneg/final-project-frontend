"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function l(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=l}function LoginController(e,t){function l(){e.login(r.credentials).then(function(){t.go("usersIndex")})}var r=this;r.credentials={},r.submit=l}function DisplaysIndexController(e,t){function l(e){return e.user.id===t.getPayload().id}var r=this;e.query().$promise.then(function(e){r.all=e}),r.isOwnDisplay=l}function DisplayShowController(e,t,l){var r=this;r.display=e.get(t.params),r.isLoggedIn=l.isAuthenticated}function DisplayEditController(e,t,l,r){function o(){e.update({id:i.display.id},i.display,function(){t.go("displayShow",t.params)})}function n(){i.display.$remove(function(){t.go("displaysIndex")})}var i=this;i.display=e.get(t.params),i.delete=n,i.update=o,i.isLoggedIn=l.isAuthenticated}function DisplayNewController(e,t){function l(){e.save(r.display,function(e){console.log("response",e),t.go("displaysIndex")})}var r=this;r.display={item_ids:[]},r.create=l}function Display(e,t){return new e(t+"/displays/:id",{id:"@id"},{update:{method:"PUT"}})}function ItemsIndexController(e){var t=this;t.all=e.query();var l=void 0,r=Math.floor(10*Math.random()+1);r%2===0&&(l="col-",r),t.random=l,console.log(t.random)}function ItemShowController(e,t,l){var r=this;r.item=e.get(t.params),r.isLoggedIn=l.isAuthenticated}function ItemEditController(e,t,l){function r(){e.update({id:n.item.id},n.item,function(){t.go("itemShow",t.params)})}function o(){n.item.$remove(function(){t.go("itemsIndex")})}var n=this;n.item=e.get(t.params),n.delete=o,n.update=r,n.isLoggedIn=l.isAuthenticated}function ItemNewController(e,t){function l(){e.save(r.item,function(e){console.log("response",e),t.go("itemsIndex")})}var r=this;r.create=l}function Item(e,t){return new e(t+"/items/:id",{id:"@id"},{update:{method:"PUT"}})}function MainController(e,t,l,r,o,n){function i(){e.logout().then(function(){t.go("landing")})}function s(l,r,o){console.log("state id",o.id),a.message=null,console.log(r,l),(!e.isAuthenticated()&&d.includes(r.name)||"userEdit"===r.name&&parseFloat(o.id)!==e.getPayload().id)&&(l.preventDefault(),a.message="You must be logged in to go there!",e.isAuthenticated()?t.go("usersIndex"):t.go("login"))}var a=this;a.isLoggedIn=e.isAuthenticated,a.message=null,e.getPayload()&&(a.currentUserId=e.getPayload().id,a.currentUser=r.get({id:a.currentUserId})),a.items=n.query(),a.displays=o.query();var d=["usersIndex","userShow","userEdit"];l.$on("$stateChangeStart",s),a.logout=i}function Router(e,t){e.state("landing",{url:"/landing",templateUrl:"/templates/landing.html"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("userShow",{url:"/users/:id",templateUrl:"/templates/userShow.html",controller:"UserShowController as userShow"}).state("userEdit",{url:"/users/:id/edit",templateUrl:"/templates/userEdit.html",controller:"UserEditController as userEdit"}).state("displaysIndex",{url:"/displays",templateUrl:"/templates/displaysIndex.html",controller:"DisplaysIndexController as displaysIndex"}).state("displayNew",{url:"/displays/new",templateUrl:"/templates/displayNew.html",controller:"DisplayNewController as displayNew"}).state("displayShow",{url:"/displays/:id",templateUrl:"/templates/displayShow.html",controller:"DisplayShowController as displayShow"}).state("displayEdit",{url:"/displays/:id/edit",templateUrl:"/templates/displayEdit.html",controller:"DisplayEditController as displayEdit"}).state("itemsIndex",{url:"/items",templateUrl:"/templates/itemsIndex.html",controller:"ItemsIndexController as itemsIndex"}).state("itemNew",{url:"/items/new",templateUrl:"/templates/itemNew.html",controller:"ItemNewController as itemNew"}).state("itemShow",{url:"/items/:id",templateUrl:"/templates/itemShow.html",controller:"ItemShowController as itemShow"}).state("itemEdit",{url:"/items/:id/edit",templateUrl:"/templates/itemEdit.html",controller:"ItemEditController as itemEdit"}),t.otherwise("/users")}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query(),console.log("all uzrz",t.all)}function UserShowController(e,t,l){function r(){o.user.$remove(function(){t.go("usersIndex")})}var o=this;e.get({id:t.params.id},function(e){o.user=e,console.log(o.user)}),o.delete=r,o.isLoggedIn=l.isAuthenticated}function UserEditController(e,t,l){function r(){e.update({id:o.user.id},o.user,function(){t.go("userShow",t.params)})}var o=this;o.user=e.get(t.params),o.update=r,o.isLoggedIn=l.isAuthenticated}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","localhost"===window.location.hostname?"http://localhost:3000/api":"https://ephemeralia-api.herokuapp.com/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("DisplaysIndexController",DisplaysIndexController).controller("DisplayShowController",DisplayShowController).controller("DisplayEditController",DisplayEditController).controller("DisplayNewController",DisplayNewController),DisplaysIndexController.$inject=["Display","$auth"],DisplayShowController.$inject=["Display","$state","$auth"],DisplayEditController.$inject=["Display","$state","$auth","Item"],DisplayNewController.$inject=["Display","$state"],angular.module("finalProject").factory("Display",Display),Display.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ItemsIndexController",ItemsIndexController).controller("ItemShowController",ItemShowController).controller("ItemEditController",ItemEditController).controller("ItemNewController",ItemNewController),ItemsIndexController.$inject=["Item"],ItemShowController.$inject=["Item","$state","$auth"],ItemEditController.$inject=["Item","$state","$auth"],ItemNewController.$inject=["Item","$state"],angular.module("finalProject").factory("Item",Item),Item.$inject=["$resource","API_URL"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User","Display","Item"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UserShowController",UserShowController).controller("UserEditController",UserEditController),UsersIndexController.$inject=["User"],UserShowController.$inject=["User","$state","$auth"],UserEditController.$inject=["User","$state","$auth"];
//# sourceMappingURL=app.js.map
