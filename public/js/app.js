"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(l.user).then(function(){t.go("login")})}var l=this;l.user={},l.submit=r}function LoginController(e,t){function r(){e.login(l.credentials).then(function(){t.go("usersIndex")})}var l=this;l.credentials={},l.submit=r}function DisplaysIndexController(e){var t=this;t.all=e.query()}function DisplayShowController(e,t,r){function l(){o.user.$remove(function(){t.go("displaysIndex")})}var o=this;o.display=e.get(t.params),o.delete=l,o.isLoggedIn=r.isAuthenticated}function DisplayEditController(e,t,r){function l(){e.update({id:o.display.id},o.display,function(){t.go("displayShow",t.params)})}var o=this;o.display=e.get(t.params),o.update=l,o.isLoggedIn=r.isAuthenticated}function Display(e,t){return new e(t+"/displays/:id",{id:"@id"},{update:{method:"PUT"}})}function ItemsIndexController(e){var t=this;t.all=e.query()}function ItemShowController(e,t,r){function l(){o.item.$remove(function(){t.go("ItemsIndex")})}var o=this;o.item=e.get(t.params),o.delete=l,o.isLoggedIn=r.isAuthenticated}function Item(e,t){return new e(t+"/items/:id",{id:"@id"},{update:{method:"PUT"}})}function MainController(e,t,r,l){function o(){e.logout().then(function(){t.go("landing")})}function n(r,l,o){console.log("state id",o.id),s.message=null,console.log(l,r),(!e.isAuthenticated()&&i.includes(l.name)||"userEdit"===l.name&&parseFloat(o.id)!==e.getPayload().id)&&(r.preventDefault(),s.message="You must be logged in to go there!",e.isAuthenticated()?t.go("usersIndex"):t.go("login"))}var s=this;s.isLoggedIn=e.isAuthenticated,s.message=null,e.getPayload()&&(s.currentUserId=e.getPayload().id),s.currentUser=l.get({id:s.currentUserId});var i=["usersIndex","userShow","userEdit"];r.$on("$stateChangeStart",n),s.logout=o}function Router(e,t){e.state("landing",{url:"/landing",templateUrl:"/templates/landing.html"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("userShow",{url:"/users/:id",templateUrl:"/templates/userShow.html",controller:"UserShowController as userShow"}).state("userEdit",{url:"/users/:id/edit",templateUrl:"/templates/userEdit.html",controller:"UserEditController as userEdit"}).state("displaysIndex",{url:"/displays",templateUrl:"/templates/displaysIndex.html",controller:"DisplaysIndexController as displaysIndex"}).state("displayShow",{url:"/displays/:id",templateUrl:"/templates/displayShow.html",controller:"DisplayShowController as displayShow"}).state("displayEdit",{url:"/displays/:id",templateUrl:"/templates/displayEdit.html",controller:"DisplayEditController as displayEdit"}).state("itemsIndex",{url:"/items",templateUrl:"/templates/itemsIndex.html",controller:"ItemsIndexController as itemsIndex"}).state("itemShow",{url:"/items/:id",templateUrl:"/templates/itemShow.html",controller:"ItemShowController as itemShow"}),t.otherwise("/users")}function UsersIndexController(e){var t=this;t.all=e.query()}function UserShowController(e,t,r){function l(){o.user.$remove(function(){t.go("usersIndex")})}var o=this;o.user=e.get(t.params),o.delete=l,o.isLoggedIn=r.isAuthenticated}function UserEditController(e,t,r){function l(){e.update({id:o.user.id},o.user,function(){t.go("userShow",t.params)})}var o=this;o.user=e.get(t.params),o.update=l,o.isLoggedIn=r.isAuthenticated}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("DisplaysIndexController",DisplaysIndexController).controller("DisplayShowController",DisplayShowController).controller("DisplayEditController",DisplayEditController),DisplaysIndexController.$inject=["Display"],DisplayShowController.$inject=["Display","$state","$auth"],DisplayEditController.$inject=["Display","$state","$auth"],angular.module("finalProject").factory("Display",Display),Display.$inject=["$resource","API_URL"],angular.module("finalProject").controller("ItemsIndexController",ItemsIndexController).controller("ItemShowController",ItemShowController),ItemsIndexController.$inject=["Item"],ItemShowController.$inject=["Item","$state","$auth"],angular.module("finalProject").factory("Item",Item),Item.$inject=["$resource","API_URL"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UserShowController",UserShowController).controller("UserEditController",UserEditController),UsersIndexController.$inject=["User"],UserShowController.$inject=["User","$state","$auth"],UserEditController.$inject=["User","$state","$auth"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"];
//# sourceMappingURL=app.js.map
