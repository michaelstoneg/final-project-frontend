"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("usersIndex")})}var o=this;o.credentials={},o.submit=r}function MainController(e,t,r,o){function n(){e.logout().then(function(){t.go("landing")})}function l(r,o,n){console.log("state id",n.id),s.message=null,console.log(o,r),(!e.isAuthenticated()&&i.includes(o.name)||"userEdit"===o.name&&parseFloat(n.id)!==e.getPayload().id)&&(r.preventDefault(),s.message="You must be logged in to go there!",e.isAuthenticated()?t.go("usersIndex"):t.go("login"))}var s=this;s.isLoggedIn=e.isAuthenticated,s.message=null,e.getPayload()&&(s.currentUserId=e.getPayload().id),s.currentUser=o.get({id:s.currentUserId});var i=["usersIndex","userShow","userEdit"];r.$on("$stateChangeStart",l),s.logout=n}function Router(e,t){e.state("landing",{url:"/landing",templateUrl:"/templates/landing.html"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("userShow",{url:"/users/:id",templateUrl:"/templates/userShow.html",controller:"UserShowController as userShow"}).state("userEdit",{url:"/users/:id/edit",templateUrl:"/templates/userEdit.html",controller:"UserEditController as userEdit"}),t.otherwise("/users")}function UsersIndexController(e){var t=this;t.all=e.query()}function UserShowController(e,t,r){function o(){n.user.$remove(function(){t.go("usersIndex")})}var n=this;n.user=e.get(t.params),n.delete=o,n.isLoggedIn=r.isAuthenticated}function UserEditController(e,t,r){function o(){e.update({id:n.user.id},n.user,function(){t.go("userShow",t.params)})}var n=this;n.user=e.get(t.params),n.update=o,n.isLoggedIn=r.isAuthenticated}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UserShowController",UserShowController).controller("UserEditController",UserEditController),UsersIndexController.$inject=["User"],UserShowController.$inject=["User","$state","$auth"],UserEditController.$inject=["User","$state","$auth"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"];
//# sourceMappingURL=app.js.map
