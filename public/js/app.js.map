{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/display.js","js/models/displays.js","js/controllers/item.js","js/models/items.js","js/controllers/main.js","js/router.js","js/controllers/users.js","js/models/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","DisplaysIndexController","Display","isOwnDisplay","display","id","getPayload","displaysIndex","all","query","DisplayShowController","displayShow","get","params","isLoggedIn","isAuthenticated","DisplayEditController","Item","update","displayEdit","deleteDisplay","$remove","delete","DisplayNewController","create","save","displayNew","res","console","log","$resource","method","ItemsIndexController","itemsIndex","ItemShowController","itemShow","item","ItemEditController","itemEdit","deleteItem","ItemNewController","User","itemNew","MainController","$rootScope","logout","secureState","e","toState","toParams","main","message","protectedStates","includes","name","parseFloat","preventDefault","currentUserId","currentUser","items","displays","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","UsersIndexController","usersIndex","UserShowController","deleteUser","userShow","UserEditController","userEdit","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('DisplaysIndexController', DisplaysIndexController)\n  .controller('DisplayShowController', DisplayShowController)\n  .controller('DisplayEditController', DisplayEditController)\n  .controller('DisplayNewController', DisplayNewController);\n\nDisplaysIndexController.$inject = ['Display', '$auth'];\nfunction DisplaysIndexController(Display, $auth) {\n  const displaysIndex = this;\n\n  displaysIndex.all = Display.query();\n\n  function isOwnDisplay(display) {\n    return display.user.id === $auth.getPayload().id;\n  }\n\n  displaysIndex.isOwnDisplay = isOwnDisplay;\n}\n\nDisplayShowController.$inject = ['Display','$state', '$auth'];\nfunction DisplayShowController(Display, $state, $auth) {\n  const displayShow = this;\n  displayShow.display = Display.get($state.params);\n\n  displayShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nDisplayEditController.$inject = ['Display','$state', '$auth', 'Item'];\nfunction DisplayEditController(Display, $state, $auth, Item) {\n  const displayEdit = this;\n\n  displayEdit.display = Display.get($state.params);\n\n  function update() {\n    Display.update({id: displayEdit.display.id}, displayEdit.display, () => {\n      $state.go('displayShow', $state.params);\n    });\n  }\n\n  function deleteDisplay() {\n    displayEdit.display.$remove(() => {\n      $state.go('displaysIndex');\n    });\n  }\n\n  displayEdit.delete = deleteDisplay;\n  displayEdit.update = update;\n  displayEdit.isLoggedIn = $auth.isAuthenticated;\n}\n\nDisplayNewController.$inject = ['Display','$state' ];\nfunction DisplayNewController(Display, $state) {\n\n  const displayNew = this;\n  displayNew.display = {};\n\n  function create() {\n\n    // let temp = [];\n    // temp.push(key);\n    Display.save(displayNew.display, (res) => {\n      console.log('response', res);\n      $state.go('displaysIndex');\n    });\n  }\n\n  displayNew.create = create;\n}\n","angular.module('finalProject')\n  .factory('Display', Display);\n\nDisplay.$inject = ['$resource', 'API_URL'];\nfunction Display($resource, API_URL) {\n  return new $resource(`${API_URL}/displays/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('ItemsIndexController', ItemsIndexController)\n  .controller('ItemShowController', ItemShowController)\n  .controller('ItemEditController', ItemEditController)\n  .controller('ItemNewController', ItemNewController);\n\nItemsIndexController.$inject = ['Item'];\nfunction ItemsIndexController(Item) {\n  const itemsIndex = this;\n\n  itemsIndex.all = Item.query();\n\n}\n\nItemShowController.$inject = ['Item','$state', '$auth'];\nfunction ItemShowController(Item, $state, $auth) {\n  const itemShow = this;\n\n  itemShow.item = Item.get($state.params);\n\n\n  itemShow.isLoggedIn = $auth.isAuthenticated;\n}\n//\nItemEditController.$inject = ['Item','$state', '$auth'];\nfunction ItemEditController(Item, $state, $auth) {\n  const itemEdit = this;\n\n  itemEdit.item = Item.get($state.params);\n\n  function update() {\n    Item.update({id: itemEdit.item.id}, itemEdit.item, () => {\n      $state.go('itemShow', $state.params);\n    });\n  }\n  function deleteItem() {\n    itemEdit.item.$remove(() => {\n      $state.go('itemsIndex');\n    });\n  }\n\n  itemEdit.delete = deleteItem;\n  itemEdit.update = update;\n  itemEdit.isLoggedIn = $auth.isAuthenticated;\n}\n\nItemNewController.$inject = ['Item','$state', 'User'];\nfunction ItemNewController(Item, $state, User) {\n\n  const itemNew = this;\n\n  function create () {\n    Item.save(itemNew.item, (res) => {\n      console.log('response', res);\n      $state.go('itemsIndex');\n    });\n  }\n\n  itemNew.create = create;\n}\n","angular.module('finalProject')\n  .factory('Item', Item);\n\nItem.$inject = ['$resource', 'API_URL'];\nfunction Item($resource, API_URL) {\n  return new $resource(`${API_URL}/items/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', 'Display', 'Item'];\nfunction MainController($auth, $state, $rootScope, User, Display , Item) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('landing');\n    });\n  }\n\n  if ($auth.getPayload()){\n    main.currentUserId = $auth.getPayload().id;\n  }\n\n  main.currentUser = User.get({id: main.currentUserId });\n\n\n  main.items = Item.query();\n  main.displays = Display.query();\n\n\n  const protectedStates = ['usersIndex', 'userShow', 'userEdit'];\n\n  function secureState(e, toState, toParams) {\n    // console.log(toState, toParams);\n    console.log('state id', toParams.id );\n    // console.log('user id', $auth.getPayload().id );\n\n\n    main.message = null;\n    console.log(toState, e);\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    (toState.name === 'userEdit' && parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      if ($auth.isAuthenticated()) {\n        $state.go('usersIndex');\n      } else {\n        $state.go('login');\n      }\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('landing', {\n      url: '/landing',\n      templateUrl: '/templates/landing.html'\n      // controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('userShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/userShow.html',\n      controller: 'UserShowController as userShow'\n    })\n    .state('userEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/userEdit.html',\n      controller: 'UserEditController as userEdit'\n    })\n    .state('displaysIndex', {\n      url: '/displays',\n      templateUrl: '/templates/displaysIndex.html',\n      controller: 'DisplaysIndexController as displaysIndex'\n    })\n    .state('displayNew', {\n      url: '/displays/new',\n      templateUrl: '/templates/displayNew.html',\n      controller: 'DisplayNewController as displayNew'\n    })\n    .state('displayShow', {\n      url: '/displays/:id',\n      templateUrl: '/templates/displayShow.html',\n      controller: 'DisplayShowController as displayShow'\n    })\n    .state('displayEdit', {\n      url: '/displays/:id/edit',\n      templateUrl: '/templates/displayEdit.html',\n      controller: 'DisplayEditController as displayEdit'\n    })\n    .state('itemsIndex', {\n      url: '/items',\n      templateUrl: '/templates/itemsIndex.html',\n      controller: 'ItemsIndexController as itemsIndex'\n    })\n    .state('itemNew', {\n      url: '/items/new',\n      templateUrl: '/templates/itemNew.html',\n      controller: 'ItemNewController as itemNew'\n    })\n    .state('itemShow', {\n      url: '/items/:id',\n      templateUrl: '/templates/itemShow.html',\n      controller: 'ItemShowController as itemShow'\n    })\n    .state('itemEdit', {\n      url: '/items/:id/edit',\n      templateUrl: '/templates/itemEdit.html',\n      controller: 'ItemEditController as itemEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UserShowController', UserShowController)\n  .controller('UserEditController', UserEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n  console.log('all uzrz', usersIndex.all);\n\n}\n\nUserShowController.$inject = ['User','$state', '$auth'];\nfunction UserShowController(User, $state, $auth) {\n  const userShow = this;\n\n  User.get({ id: $state.params.id}, user => {\n    userShow.user = user;\n    console.log(userShow.user);\n  });\n\n  function deleteUser() {\n    userShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  // User.get({ id: $auth.getPayload()._id }, (user) => {\n  //   userShow.user = user;\n  // });\n\n  userShow.delete = deleteUser;\n  userShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUserEditController.$inject = ['User','$state', '$auth'];\nfunction UserEditController(User, $state, $auth) {\n  const userEdit = this;\n\n  userEdit.user = User.get($state.params);\n\n  function update() {\n    User.update({id: userEdit.user.id}, userEdit.user, () => {\n      $state.go('userShow', $state.params);\n    });\n  }\n\n  userEdit.update = update;\n  userEdit.isLoggedIn = $auth.isAuthenticated;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}