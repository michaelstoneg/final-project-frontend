{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/display.js","js/models/displays.js","js/controllers/item.js","js/models/items.js","js/controllers/main.js","js/router.js","js/controllers/users.js","js/models/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","console","log","DisplaysIndexController","Display","isOwnDisplay","display","id","getPayload","displaysIndex","query","$promise","displays","all","DisplayShowController","displayShow","get","params","isLoggedIn","isAuthenticated","DisplayEditController","Item","update","displayEdit","deleteDisplay","$remove","delete","DisplayNewController","create","save","displayNew","res","item_ids","$resource","method","ItemsIndexController","itemsIndex","ItemShowController","itemShow","item","ItemEditController","itemEdit","deleteItem","ItemNewController","itemNew","MainController","$rootScope","User","logout","secureState","e","toState","toParams","main","message","protectedStates","includes","name","parseFloat","preventDefault","currentUserId","currentUser","items","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","UsersIndexController","usersIndex","UserShowController","deleteUser","userShow","UserEditController","userEdit","angular","module","constant","window","location","hostname","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : 'http://ephemeralia-api.herokuapp.com')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) { console.log('loading LoginController');\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('DisplaysIndexController', DisplaysIndexController)\n  .controller('DisplayShowController', DisplayShowController)\n  .controller('DisplayEditController', DisplayEditController)\n  .controller('DisplayNewController', DisplayNewController);\n\nDisplaysIndexController.$inject = ['Display', '$auth'];\nfunction DisplaysIndexController(Display, $auth) {\n  const displaysIndex = this;\n\n  Display.query().$promise.then((displays) => {\n    displaysIndex.all = displays;\n  });\n\n  function isOwnDisplay(display) {\n    return display.user.id === $auth.getPayload().id;\n  }\n\n  displaysIndex.isOwnDisplay = isOwnDisplay;\n}\n\nDisplayShowController.$inject = ['Display','$state', '$auth'];\nfunction DisplayShowController(Display, $state, $auth) {\n  const displayShow = this;\n  displayShow.display = Display.get($state.params);\n\n  displayShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nDisplayEditController.$inject = ['Display','$state', '$auth', 'Item'];\nfunction DisplayEditController(Display, $state, $auth, Item) {\n  const displayEdit = this;\n\n  displayEdit.display = Display.get($state.params);\n\n  function update() {\n    Display.update({id: displayEdit.display.id}, displayEdit.display, () => {\n      $state.go('displayShow', $state.params);\n    });\n  }\n\n  function deleteDisplay() {\n    displayEdit.display.$remove(() => {\n      $state.go('displaysIndex');\n    });\n  }\n\n  displayEdit.delete = deleteDisplay;\n  displayEdit.update = update;\n  displayEdit.isLoggedIn = $auth.isAuthenticated;\n}\n\nDisplayNewController.$inject = ['Display','$state' ];\nfunction DisplayNewController(Display, $state) {\n\n  const displayNew = this;\n  displayNew.display = { item_ids: [] };\n\n  function create() {\n    Display.save(displayNew.display, (res) => {\n      console.log('response', res);\n      $state.go('displaysIndex');\n    });\n  }\n\n  displayNew.create = create;\n}\n","angular.module('finalProject')\n  .factory('Display', Display);\n\nDisplay.$inject = ['$resource', 'API_URL'];\nfunction Display($resource, API_URL) {\n  return new $resource(`${API_URL}/displays/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('ItemsIndexController', ItemsIndexController)\n  .controller('ItemShowController', ItemShowController)\n  .controller('ItemEditController', ItemEditController)\n  .controller('ItemNewController', ItemNewController);\n\nItemsIndexController.$inject = ['Item'];\nfunction ItemsIndexController(Item) {\n  const itemsIndex = this;\n\n  itemsIndex.all = Item.query();\n\n}\n\nItemShowController.$inject = ['Item','$state', '$auth'];\nfunction ItemShowController(Item, $state, $auth) {\n  const itemShow = this;\n\n  itemShow.item = Item.get($state.params);\n\n\n  itemShow.isLoggedIn = $auth.isAuthenticated;\n}\n//\nItemEditController.$inject = ['Item','$state', '$auth'];\nfunction ItemEditController(Item, $state, $auth) {\n  const itemEdit = this;\n\n  itemEdit.item = Item.get($state.params);\n\n  function update() {\n    Item.update({id: itemEdit.item.id}, itemEdit.item, () => {\n      $state.go('itemShow', $state.params);\n    });\n  }\n  function deleteItem() {\n    itemEdit.item.$remove(() => {\n      $state.go('itemsIndex');\n    });\n  }\n\n  itemEdit.delete = deleteItem;\n  itemEdit.update = update;\n  itemEdit.isLoggedIn = $auth.isAuthenticated;\n}\n\nItemNewController.$inject = ['Item','$state'];\nfunction ItemNewController(Item, $state) {\n\n  const itemNew = this;\n\n  function create () {\n    Item.save(itemNew.item, (res) => {\n      console.log('response', res);\n      $state.go('itemsIndex');\n    });\n  }\n\n  itemNew.create = create;\n}\n","angular.module('finalProject')\n  .factory('Item', Item);\n\nItem.$inject = ['$resource', 'API_URL'];\nfunction Item($resource, API_URL) {\n  return new $resource(`${API_URL}/items/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User', 'Display', 'Item'];\nfunction MainController($auth, $state, $rootScope, User, Display, Item) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('landing');\n    });\n  }\n\n  if ($auth.getPayload()){\n    main.currentUserId = $auth.getPayload().id;\n    main.currentUser = User.get({id: main.currentUserId });\n  }\n\n  main.items = Item.query();\n  main.displays = Display.query();\n\n\n  const protectedStates = ['usersIndex', 'userShow', 'userEdit'];\n\n  function secureState(e, toState, toParams) {\n    // console.log(toState, toParams);\n    console.log('state id', toParams.id );\n    // console.log('user id', $auth.getPayload().id );\n\n\n    main.message = null;\n    console.log(toState, e);\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    (toState.name === 'userEdit' && parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      if ($auth.isAuthenticated()) {\n        $state.go('usersIndex');\n      } else {\n        $state.go('login');\n      }\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('landing', {\n      url: '/landing',\n      templateUrl: '/templates/landing.html'\n      // controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('userShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/userShow.html',\n      controller: 'UserShowController as userShow'\n    })\n    .state('userEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/userEdit.html',\n      controller: 'UserEditController as userEdit'\n    })\n    .state('displaysIndex', {\n      url: '/displays',\n      templateUrl: '/templates/displaysIndex.html',\n      controller: 'DisplaysIndexController as displaysIndex'\n    })\n    .state('displayNew', {\n      url: '/displays/new',\n      templateUrl: '/templates/displayNew.html',\n      controller: 'DisplayNewController as displayNew'\n    })\n    .state('displayShow', {\n      url: '/displays/:id',\n      templateUrl: '/templates/displayShow.html',\n      controller: 'DisplayShowController as displayShow'\n    })\n    .state('displayEdit', {\n      url: '/displays/:id/edit',\n      templateUrl: '/templates/displayEdit.html',\n      controller: 'DisplayEditController as displayEdit'\n    })\n    .state('itemsIndex', {\n      url: '/items',\n      templateUrl: '/templates/itemsIndex.html',\n      controller: 'ItemsIndexController as itemsIndex'\n    })\n    .state('itemNew', {\n      url: '/items/new',\n      templateUrl: '/templates/itemNew.html',\n      controller: 'ItemNewController as itemNew'\n    })\n    .state('itemShow', {\n      url: '/items/:id',\n      templateUrl: '/templates/itemShow.html',\n      controller: 'ItemShowController as itemShow'\n    })\n    .state('itemEdit', {\n      url: '/items/:id/edit',\n      templateUrl: '/templates/itemEdit.html',\n      controller: 'ItemEditController as itemEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UserShowController', UserShowController)\n  .controller('UserEditController', UserEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n  console.log('all uzrz', usersIndex.all);\n\n}\n\nUserShowController.$inject = ['User','$state', '$auth'];\nfunction UserShowController(User, $state, $auth) {\n  const userShow = this;\n\n  User.get({ id: $state.params.id}, user => {\n    userShow.user = user;\n    console.log(userShow.user);\n  });\n\n  function deleteUser() {\n    userShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  // User.get({ id: $auth.getPayload()._id }, (user) => {\n  //   userShow.user = user;\n  // });\n\n  userShow.delete = deleteUser;\n  userShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUserEditController.$inject = ['User','$state', '$auth'];\nfunction UserEditController(User, $state, $auth) {\n  const userEdit = this;\n\n  userEdit.user = User.get($state.params);\n\n  function update() {\n    User.update({id: userEdit.user.id}, userEdit.user, () => {\n      $state.go('userShow', $state.params);\n    });\n  }\n\n  userEdit.update = update;\n  userEdit.isLoggedIn = $auth.isAuthenticated;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}