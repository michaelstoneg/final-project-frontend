{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/controllers/users.js","js/models/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","User","logout","secureState","e","toState","toParams","console","log","id","main","message","isAuthenticated","protectedStates","includes","name","parseFloat","getPayload","preventDefault","isLoggedIn","currentUserId","currentUser","get","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","UsersIndexController","usersIndex","all","query","UserShowController","deleteUser","userShow","$remove","params","delete","UserEditController","update","userEdit","$resource","method","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('landing');\n    });\n  }\n\n  if ($auth.getPayload()){\n    main.currentUserId = $auth.getPayload().id;\n  }\n\n  main.currentUser = User.get({id: main.currentUserId });\n\n\n  const protectedStates = ['usersIndex', 'userShow', 'userEdit'];\n\n  function secureState(e, toState, toParams) {\n    // console.log(toState, toParams);\n    console.log('state id', toParams.id );\n    // console.log('user id', $auth.getPayload().id );\n\n\n    main.message = null;\n    console.log(toState, e);\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    (toState.name === 'userEdit' && parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      if ($auth.isAuthenticated()) {\n        $state.go('usersIndex');\n      } else {\n        $state.go('login');\n      }\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('landing', {\n      url: '/landing',\n      templateUrl: '/templates/landing.html'\n      // controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('userShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/userShow.html',\n      controller: 'UserShowController as userShow'\n    })\n    .state('userEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/userEdit.html',\n      controller: 'UserEditController as userEdit'\n    })\n    ;\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UserShowController', UserShowController)\n  .controller('UserEditController', UserEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n\n}\n\nUserShowController.$inject = ['User','$state', '$auth'];\nfunction UserShowController(User, $state, $auth) {\n  const userShow = this;\n\n  userShow.user = User.get($state.params);\n\n  function deleteUser() {\n    userShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  // User.get({ id: $auth.getPayload()._id }, (user) => {\n  //   userShow.user = user;\n  // });\n\n  userShow.delete = deleteUser;\n  userShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUserEditController.$inject = ['User','$state', '$auth'];\nfunction UserEditController(User, $state, $auth) {\n  const userEdit = this;\n\n  userEdit.user = User.get($state.params);\n\n  function update() {\n    User.update({id: userEdit.user.id}, userEdit.user, () => {\n      $state.go('userShow', $state.params);\n    });\n  }\n\n  userEdit.update = update;\n  userEdit.isLoggedIn = $auth.isAuthenticated;\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}